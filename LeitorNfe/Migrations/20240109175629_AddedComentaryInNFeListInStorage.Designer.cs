// <auto-generated />
using System;
using LeitorNfe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeitorNfe.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240109175629_AddedComentaryInNFeListInStorage")]
    partial class AddedComentaryInNFeListInStorage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeitorNfe.Core.Models.CanonicalizationMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Algorithm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CanonicalizationMethod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Cobr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FatId");

                    b.ToTable("Cobr");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Dest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("enderDestId")
                        .HasColumnType("int");

                    b.Property<string>("indIEDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("enderDestId");

                    b.ToTable("Dest");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Det", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ImpostoId")
                        .HasColumnType("int");

                    b.Property<int?>("InfNFeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImpostoId");

                    b.HasIndex("InfNFeId");

                    b.HasIndex("ProdId");

                    b.ToTable("Det");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.DigestMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Algorithm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DigestMethod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Dup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CobrId")
                        .HasColumnType("int");

                    b.Property<string>("DVenc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VDup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CobrId");

                    b.ToTable("Dup");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Emit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("enderEmitId")
                        .HasColumnType("int");

                    b.Property<string>("xFant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("enderEmitId");

                    b.ToTable("Emit");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.EnderDest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cMun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xBairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xLgr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xMun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xPais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnderDest");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.EnderEmit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cMun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xBairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xLgr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xMun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xPais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnderEmit");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Fat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NFat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VLiq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VOrig")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fat");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.ICMS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ICMSSN102Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ICMSSN102Id");

                    b.ToTable("ICMS");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.ICMSSN102", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CSOSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orig")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ICMSSN102");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.ICMSTot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("VBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VBCST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VCOFINS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFCPST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFCPSTRet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFCPUFDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFrete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VICMS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VICMSDeson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VICMSUFDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VICMSUFRemet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VII")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIPIDevol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VNF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VOutro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VPIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VProd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VSeg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ICMSTot");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.IPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IPINTId")
                        .HasColumnType("int");

                    b.Property<string>("cEnq")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IPINTId");

                    b.ToTable("IPI");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.IPINT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CST")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IPINT");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Ide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cDV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cMunFG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cNF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cUF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dhEmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dhSaiEnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("finNFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("indFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("indPres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nNF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natOp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("procEmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpAmb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpEmis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpImp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpNF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verProc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ide");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Imposto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ICMSId")
                        .HasColumnType("int");

                    b.Property<int?>("IPIId")
                        .HasColumnType("int");

                    b.Property<string>("VTotTrib")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId");

                    b.HasIndex("IPIId");

                    b.ToTable("Imposto");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.InfAdic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("infCpl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfAdic");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.InfNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CobrId")
                        .HasColumnType("int");

                    b.Property<int?>("DestId")
                        .HasColumnType("int");

                    b.Property<int?>("EmitId")
                        .HasColumnType("int");

                    b.Property<int?>("IdeId")
                        .HasColumnType("int");

                    b.Property<int?>("InfAdicId")
                        .HasColumnType("int");

                    b.Property<int?>("InfRespTecId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalId")
                        .HasColumnType("int");

                    b.Property<int?>("TranspId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CobrId");

                    b.HasIndex("DestId");

                    b.HasIndex("EmitId");

                    b.HasIndex("IdeId");

                    b.HasIndex("InfAdicId");

                    b.HasIndex("InfRespTecId");

                    b.HasIndex("TotalId");

                    b.HasIndex("TranspId");

                    b.ToTable("InfNFe");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.InfRespTec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xContato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfRespTec");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.KeyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("X509DataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("X509DataId");

                    b.ToTable("KeyInfo");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.NFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InfNFeId")
                        .HasColumnType("int");

                    b.Property<int?>("SignatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InfNFeId");

                    b.HasIndex("SignatureId");

                    b.ToTable("NFes");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.NFeInStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Directory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NFeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NFeId");

                    b.ToTable("NFesInStorage");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Prod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CFOP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cEAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cEANTrib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cProd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("indTot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nItemPed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qCom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qTrib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uCom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uTrib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vProd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vUnCom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vUnTrib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xPed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xProd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DigestMethodId")
                        .HasColumnType("int");

                    b.Property<string>("DigestValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransformsId")
                        .HasColumnType("int");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DigestMethodId");

                    b.HasIndex("TransformsId");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KeyInfoId")
                        .HasColumnType("int");

                    b.Property<string>("SignatureValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SignedInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KeyInfoId");

                    b.HasIndex("SignedInfoId");

                    b.ToTable("Signature");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.SignatureMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Algorithm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SignatureMethod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.SignedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CanonicalizationMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("SignatureMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanonicalizationMethodId");

                    b.HasIndex("ReferenceId");

                    b.HasIndex("SignatureMethodId");

                    b.ToTable("SignedInfo");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Total", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ICMSTotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ICMSTotId");

                    b.ToTable("Total");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Transform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Algorithm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transform");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Transforms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TransformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransformId");

                    b.ToTable("Transforms");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Transp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModFrete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VolId");

                    b.ToTable("Transp");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Vol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QVol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vol");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.X509Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("X509Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("X509Data");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Cobr", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Fat", "Fat")
                        .WithMany()
                        .HasForeignKey("FatId");

                    b.Navigation("Fat");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Dest", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.EnderDest", "enderDest")
                        .WithMany()
                        .HasForeignKey("enderDestId");

                    b.Navigation("enderDest");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Det", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Imposto", "Imposto")
                        .WithMany()
                        .HasForeignKey("ImpostoId");

                    b.HasOne("LeitorNfe.Core.Models.InfNFe", null)
                        .WithMany("Det")
                        .HasForeignKey("InfNFeId");

                    b.HasOne("LeitorNfe.Core.Models.Prod", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId");

                    b.Navigation("Imposto");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Dup", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Cobr", null)
                        .WithMany("Dup")
                        .HasForeignKey("CobrId");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Emit", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.EnderEmit", "enderEmit")
                        .WithMany()
                        .HasForeignKey("enderEmitId");

                    b.Navigation("enderEmit");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.ICMS", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.ICMSSN102", "ICMSSN102")
                        .WithMany()
                        .HasForeignKey("ICMSSN102Id");

                    b.Navigation("ICMSSN102");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.IPI", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.IPINT", "IPINT")
                        .WithMany()
                        .HasForeignKey("IPINTId");

                    b.Navigation("IPINT");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Imposto", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.ICMS", "ICMS")
                        .WithMany()
                        .HasForeignKey("ICMSId");

                    b.HasOne("LeitorNfe.Core.Models.IPI", "IPI")
                        .WithMany()
                        .HasForeignKey("IPIId");

                    b.Navigation("ICMS");

                    b.Navigation("IPI");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.InfNFe", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Cobr", "Cobr")
                        .WithMany()
                        .HasForeignKey("CobrId");

                    b.HasOne("LeitorNfe.Core.Models.Dest", "Dest")
                        .WithMany()
                        .HasForeignKey("DestId");

                    b.HasOne("LeitorNfe.Core.Models.Emit", "Emit")
                        .WithMany()
                        .HasForeignKey("EmitId");

                    b.HasOne("LeitorNfe.Core.Models.Ide", "Ide")
                        .WithMany()
                        .HasForeignKey("IdeId");

                    b.HasOne("LeitorNfe.Core.Models.InfAdic", "InfAdic")
                        .WithMany()
                        .HasForeignKey("InfAdicId");

                    b.HasOne("LeitorNfe.Core.Models.InfRespTec", "InfRespTec")
                        .WithMany()
                        .HasForeignKey("InfRespTecId");

                    b.HasOne("LeitorNfe.Core.Models.Total", "Total")
                        .WithMany()
                        .HasForeignKey("TotalId");

                    b.HasOne("LeitorNfe.Core.Models.Transp", "Transp")
                        .WithMany()
                        .HasForeignKey("TranspId");

                    b.Navigation("Cobr");

                    b.Navigation("Dest");

                    b.Navigation("Emit");

                    b.Navigation("Ide");

                    b.Navigation("InfAdic");

                    b.Navigation("InfRespTec");

                    b.Navigation("Total");

                    b.Navigation("Transp");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.KeyInfo", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.X509Data", "X509Data")
                        .WithMany()
                        .HasForeignKey("X509DataId");

                    b.Navigation("X509Data");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.NFe", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.InfNFe", "InfNFe")
                        .WithMany()
                        .HasForeignKey("InfNFeId");

                    b.HasOne("LeitorNfe.Core.Models.Signature", "Signature")
                        .WithMany()
                        .HasForeignKey("SignatureId");

                    b.Navigation("InfNFe");

                    b.Navigation("Signature");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.NFeInStorage", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.NFe", "NFe")
                        .WithMany()
                        .HasForeignKey("NFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NFe");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Reference", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.DigestMethod", "DigestMethod")
                        .WithMany()
                        .HasForeignKey("DigestMethodId");

                    b.HasOne("LeitorNfe.Core.Models.Transforms", "Transforms")
                        .WithMany()
                        .HasForeignKey("TransformsId");

                    b.Navigation("DigestMethod");

                    b.Navigation("Transforms");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Signature", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.KeyInfo", "KeyInfo")
                        .WithMany()
                        .HasForeignKey("KeyInfoId");

                    b.HasOne("LeitorNfe.Core.Models.SignedInfo", "SignedInfo")
                        .WithMany()
                        .HasForeignKey("SignedInfoId");

                    b.Navigation("KeyInfo");

                    b.Navigation("SignedInfo");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.SignedInfo", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.CanonicalizationMethod", "CanonicalizationMethod")
                        .WithMany()
                        .HasForeignKey("CanonicalizationMethodId");

                    b.HasOne("LeitorNfe.Core.Models.Reference", "Reference")
                        .WithMany()
                        .HasForeignKey("ReferenceId");

                    b.HasOne("LeitorNfe.Core.Models.SignatureMethod", "SignatureMethod")
                        .WithMany()
                        .HasForeignKey("SignatureMethodId");

                    b.Navigation("CanonicalizationMethod");

                    b.Navigation("Reference");

                    b.Navigation("SignatureMethod");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Total", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.ICMSTot", "ICMSTot")
                        .WithMany()
                        .HasForeignKey("ICMSTotId");

                    b.Navigation("ICMSTot");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Transforms", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Transform", "Transform")
                        .WithMany()
                        .HasForeignKey("TransformId");

                    b.Navigation("Transform");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Transp", b =>
                {
                    b.HasOne("LeitorNfe.Core.Models.Vol", "Vol")
                        .WithMany()
                        .HasForeignKey("VolId");

                    b.Navigation("Vol");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.Cobr", b =>
                {
                    b.Navigation("Dup");
                });

            modelBuilder.Entity("LeitorNfe.Core.Models.InfNFe", b =>
                {
                    b.Navigation("Det");
                });
#pragma warning restore 612, 618
        }
    }
}
